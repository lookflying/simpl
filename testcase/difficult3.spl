let
	f = fun x->fun y->fun z->((snd z y) x)
in
	(((f 5 ) 10 )(fun x->fun y-> x - y, fun y->
		let
			x = fun z->head (fun x-> x + z) :: ((fun y-> x + y) ::nil)
		in
			((x 1) 3);
			fun x-> x + y
		end
		
		))
end
$
